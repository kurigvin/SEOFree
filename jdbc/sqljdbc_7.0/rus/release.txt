Сведения о версии
Драйвер Microsoft JDBC 7.0 для SQL Server
Июль 2018  г.

------------
ВВЕДЕНИЕ
------------
Этот файл содержит самые последние сведения и другие важные дополнения к документации по Microsoft JDBC 
Driver 7.0 для SQL Server. Обязательно полностью прочтите этот файл, прежде чем устанавливать 
драйвер JDBC.

Нам важно получать ваши отзывы, и мы прилагаем все усилия, чтобы своевременно на них 
реагировать. Предоставить отзыв можно в блогах и сетевых форумах, посвященных драйверу JDBC. 
Подробнее см. на странице "Microsoft JDBC Driver 7.0 для SQL Server": https://aka.ms/mssql-jdbc.


------------
УСТАНОВКА
------------
Инструкции по установке драйвера JDBC приводятся в файле install.txt. Этот файл включает 
сведения об установке драйвера JDBC в операционных системах Windows, Linux и Mac.


---------------------------
ПОДДЕРЖИВАЕМЫЕ ОПЕРАЦИОННЫЕ СИСТЕМЫ
---------------------------
Microsoft JDBC Driver 7.0 для SQL Server поддерживает следующие операционные системы.
  Windows Server 2008 с пакетом обновления 2 (SP2)
  Windows Server 2008 R2 с пакетом обновления 1 (SP1)
  Windows Server 2012
  Windows Server 2012 R2
  Windows Server 2016
  Windows 8
  Windows 8.1
  Windows 10
  Linux
  Mac

В вышеприведенном списке представлены некоторые из поддерживаемых операционных систем. Драйвер JDBC совместим 
с любой операционной системой, позволяющей использовать виртуальную машину Java (JVM). 

При этом на совместимость и поддержку были проверены только новейшие операционные системы Linux и Mac OS (Ubuntu 18.04, CentOs 7, Suse 12, 
Mac OS 10.13).


----------------
СОСТАВ РАСПРОСТРАНЯЕМОЙ ВЕРСИИ
----------------
Исполняемый ZIP- или TAR-файл Microsoft JDBC Driver 7.0 для SQL Server распаковывает следующие файлы 
по указанным путям относительно выбранного каталога установки.

<каталог_установки>\sqljdbc_<версия>\<язык>\install.txt
<каталог_установки>\sqljdbc_<версия>\<язык>\release.txt
<каталог_установки>\sqljdbc_<версия>\<язык>\license.txt
<каталог_установки>\sqljdbc_<версия>\<язык>\thirdpartynotices.txt
<каталог_установки>\sqljdbc_<версия>\<язык>\mssql-jdbc-7.0.0.jre8.jar
<каталог_установки>\sqljdbc_<версия>\<язык>\mssql-jdbc-7.0.0.jre10.jar
<каталог_установки>\sqljdbc_<версия>\<язык>\auth\x86\sqljdbc_auth.dll
<каталог_установки>\sqljdbc_<версия>\<язык>\auth\x64\sqljdbc_auth.dll
<каталог установки>\sqljdbc_<версия>\<язык>\samples\<файлы образцов...>
<каталог_установки>\sqljdbc_<версия>\<язык>\xa\xa_install.sql
<каталог_установки>\sqljdbc_<версия>\<язык>\xa\x86\sqljdbc_xa.dll
<каталог_установки>\sqljdbc_<версия>\<язык>\xa\x64\sqljdbc_xa.dll

Подробные сведения о каждом из компонентов см. в электронной документации
по Microsoft JDBC Driver для SQL Server. 
https://msdn.microsoft.com/ru-ru/library/dn197850(v=sql.10).aspx.


-------------
ДОКУМЕНТАЦИЯ
-------------
Этот пакет содержит сведения о выпуске, руководство по установке и условия лицензии. 
Всю прочую документацию можно найти в Интернете.

Просим учесть, что файлы автономной справки больше не обновляются. 


---------
JAR-ФАЙЛЫ
---------
Для обеспечения обратной совместимости и поддержки возможных сценариев обновления каждый пакет установки JDBC Driver 7.0 включает 
две библиотеки классов JAR:
	mssql-jdbc-7.0.0.jre8.jar
	mssql-jdbc-7.0.0.jre10.jar.


----------------------
ФАЙЛЫ ОПРЕДЕЛЕННЫХ КОМПОНЕНТОВ
----------------------
Компоненты Azure Active Directory и встроенной проверки подлинности (в Windows) помещаются 
в каталог "auth".

Компоненты распределенных транзакций JDBC помещаются в каталог "xa".


--------------------
ЗАВИСИМОСТИ КОМПОНЕНТОВ
--------------------
Некоторые функции Microsoft JDBC Driver 7.0 для SQL Server зависят от внешних библиотек, 
указанных ниже.

1. Использование Always Encrypted с поставщиком хранилища ключей Azure
   Зависимые библиотеки: azure-keyvault (версия 1.0.0) и adal4j (версия 1.6.0)
   
2. Использование встроенной проверки подлинности Azure Active Directory в операционных системах Windows, Linux и Mac
   Зависимая библиотека: adal4j (версия 1.6.0)

Подробные сведения о включении этих зависимых библиотек в стандартное приложение Java 
или в приложение Maven: https://go.microsoft.com/fwlink/?linkid=867575


-------
ПРИМЕРЫ
-------
В каталог "samples" помещаются примеры приложений, демонстрирующие различные возможности драйвера JDBC.
драйвера JDBC. Дополнительные сведения о каждом примере и о том, как их запускать, см. в электронной 
документации.


-----------
СПИСОК ИЗМЕНЕНИЙ
-----------
Изменения в версии 7.0.0.0 по сравнению с версией 6.4.0.0.
— В драйвер добавлена поддержка JDK 10, заменившая JDK 9.
— Зависимость Maven для библиотеки проверки подлинности Microsoft Azure Active Directory (ADAL4J) для Java обновлена 
  до версии 1.6.0 библиотеки.
— Уровень совместимости по умолчанию в драйвере обновлен до характеристик JDBC 4.2.
— Добавлена поддержка пространственных типов данных.
— Добавлено новое свойство подключения "cancelQueryTimeout" для отмены QueryTimeout в подключении и 
  инструкции.
— Добавлена реализация для JDBC 4.3, в которой представлены API java.sql.Connection beginRequest() и endRequest().
— В поставщик Azure Key Vault добавлена поддержка проверки подлинности с помощью пользовательского метода, реализованного 
  через 'SQLServerKeyVaultAuthenticationCallback', для получения токена доступа.
— Добавлена поддержка получения сведений об обнаружении и классификации данных в ResultSet.
— Добавлена поддержка расширения функции UTF-8.
— Алгоритм Sha1 при создании дескриптора PreparedStatement и ключей кэша метаданных изменен на CityHash.
— Добавлена запись манифеста "Automatic-Module-Name" в создаваемые JAR-файлы jre10, чтобы модуль драйвера
  "com.microsoft.sqlserver.jdbc" был доступен клиентам с JDK 10.

Внесены следующие улучшения. 
— Повышена производительность с сохранением соответствия JDBC с результатами из sp_fkeys.
— Добавлено новое свойство подключения "useBulkCopyForBatchInsert", которое позволяет драйверу использовать
  API массового копирования для операций пакетной вставки. Эта функция доступна только при 
  пакетной вставке в хранилище данных Azure; она значительно повышает производительность вставки.

Исправления ошибок:
— Исправлены Blobs, которые становились недоступными при перемещении курсора ResultSet или закрытии ResultSet.
— Исправлена проблема, возникавшая при попытке вставить пустое значение или значение NULL в зашифрованный столбец.
— Исправлено вводящее в заблуждение сообщение об ошибке, возникавшее в драйвере, если у пользователя нет разрешений на выполнение.
— Исправлены проблемы сходства ЦП на стороне сервера, возникавшие, если параметр "multiSubnetFailover" имел значение True. Они были вызваны неравномерным распределением 
  подключений в узлах NUMA.
— Исправлена проблема, из-за которой драйвер не полностью анализировал пакеты TDS для захвата исключений, возникающих 
  в исполняемых хранимых процедурах.
— Исправлена проблема, из-за которой в драйвере возникало исключение при использовании API инструкций и последующего выполнения запроса 
  с параметром SHOWPLAN_TEXT, имеющим значение ON.
— Исправлена проблема, из-за которой экземпляры ResultSetMetaData, созданные ResultSet, не сохранялись 
  после его закрытия.
— Исправлена проблема с PreparedStatement.setBigDecimal(), из-за которой не передавался масштаб.
— Исправлена проблема, из-за которой Clobs/NClobs не сохранялись после закрытия ResultSet/Connection.
— Исправлена проблема, из-за которой драйвер удалял создаваемые пользователями учетные данные при использовании ограниченного делегирования Kerberos.
— Исправлена проблема с "hostNameInCertificate", возникавшая при перенаправлении, если было установлено подключение к Azure.
— Исправлены временные ошибки "Дескриптор PreparedStatement не найден", возникавшие при создании пула инструкций.
— Исправлены инструкции, порождавшие SQLServerException вместо java.sql.SQLTimeoutException при 
  истечении времени ожидания запроса.
— Исправлен конфликт соответствия JDBC, из-за которого драйвер возвращал созданные столбцы как SS_IS_COMPUTED 
  вместо IS_GENERATED.
— Исправлена проблема с экранированными именами каталога при извлечении метаданных с getSchema().
— Реализация обработки сокета обобщена на случай использования разных JVM, 
  упрощена логика при использовании одного IP-адреса.

  
------------
ИЗВЕСТНЫЕ ПРОБЛЕМЫ
------------
Ниже перечислены известные проблемы с Microsoft JDBC Driver 7.0 для SQL Server.

1) ОГРАНИЧЕНИЯ МЕТАДАННЫХ ПАРАМЕТРОВ ПРИ ИСПОЛЬЗОВАНИИ SQL SERVER 2008 ИЛИ 2008 R2

1.a) Метод PreparedStatement.getParameterMetadata() вызывает SQLException при использовании
с параметризованным запросом MERGE.

1.2. Метаданные параметров для подготовленных инструкций не работают с запросами, имеющими вложенные запросы или соединения.


2) РАЗРЫВ СОЕДИНЕНИЯ ПРИ ИСПОЛЬЗОВАНИИ SQL AZURE

При подключении к SQL Azure неактивные подключения могут быть завершены сетевым компонентом (например, 
брандмауэром) после периода бездействия. Чтобы сетевой компонент не удалял неактивные подключения, 
следует задать следующие параметры реестра (или их эквиваленты, если используется не Windows) в операционной 
системе, где загружен драйвер.
           
Параметр реестра                                                                   Рекомендованное значение
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\KeepAliveTime            30000
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\KeepAliveInterval         1000
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\TcpMaxDataRetransmission  10


3) ПРИ ИСПОЛЬЗОВАНИИ ВОЗВРАЩАЮЩЕГО ТАБЛИЧНОЕ ЗНАЧЕНИЕ ПАРАМЕТРА С SQL_VARIANT 

3.а) ДЛЯ ЗНАЧЕНИЙ ДАТ

При использовании возвращающего табличное значение параметра для заполнения таблицы, содержащей значения datetime, smalldatetime или date в столбце sql_variant, 
вызов метода getDateTime()/getSmallDateTime()/getDate() в ResultSet не работает и создает следующее исключение:

	java.lang.String не удается привести к java.sql.Timestamp.

Решение. Используйте getString() или getObject().

3.б) ИСПОЛЬЗОВАНИЕ ВОЗВРАЩАЮЩЕГО ТАБЛИЧНОЕ ЗНАЧЕНИЕ ПАРАМЕТРА С SQL_VARIANT ДЛЯ ЗНАЧЕНИЙ NULL

При использовании возвращающего табличное значение параметра для заполнения таблицы и отправки значения NULL в столбец типа sql_variant будет возникать
исключение, так как вставка значения NULL со столбцом типа sql_variant в возвращающей табличное значение параметр сейчас не поддерживается.

